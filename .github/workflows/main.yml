name: Test
on:
  push:
jobs:
  Example-Actions-Job:
    name: Exploring GitHub Actions
    runs-on: ubuntu-latest
    steps:
      - name: Get Config Value
        id: setConfigValue
        run: |
          setMaskedOutput() {
            keyName=$1
            value=$2
            githuboutput=$3
            echo $keyName=$value >> githuboutput
            echo ::add-mask::$value;
          }
        
          secretcustomervalue="rwe"
          customervalue="messe"
          setMaskedOutput customerKey, $customervalue, $GITHUB_OUTPUT;
          echo secretcustomerKey=$secretcustomervalue >> $GITHUB_OUTPUT
          echo ::add-mask::$customervalue;
          echo customerKey=$customervalue >> $GITHUB_OUTPUT
          
          echo "key1=value1" >> $GITHUB_OUTPUT
          echo key2=value2 >> $GITHUB_OUTPUT
          
        
      - name: getConfigValue
        id: getconfigValue
        run: | 
          echo "Getting the config value for customerKey"  
          echo ${{ steps.setConfigValue.outputs.customerKey }}
          echo ${{ steps.setConfigValue.outputs.secretcustomerKey }}
          echo ${{ steps.setConfigValue.outputs.key1 }}
          echo ${{ steps.setConfigValue.outputs.key2 }}  
          
        
      - name: setvariableold
        id: setvariableold
        run: echo ::set-output name=customerConfigKey::"f4h-dev";

      - name: getvariableold
        id: getvariableold
        run: echo ${{ steps.setvariableold.outputs.customerConfigKey }}  
        
      - name: setvariable
        id: setvariable
        run: echo "customerConfigKey=f4h-staging" >> $GITHUB_OUTPUT

      - name: getvariable
        id: getvariable
        run: echo ${{ steps.setvariable.outputs.customerConfigKey }}
       # Display the event that triggered the workflow
      - run: echo "The job was triggered by a ${{ github.event_name }} event."
       # Runner information
      - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub"
      # Information about the repository and branch
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      # Use Action located in https://github.com/actions
      - name: Check out repository code
        uses: actions/checkout@v2  
      
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "Your repository has been copied to the path ${{ github.workspace }} on the runner."
      
      - run: echo "The workflow is now ready to test your code on the runner."
      
      - name: conditional step when event name is pull request
        if: ${{ github.event_name == 'pull_request' }}
        run: echo "This event is a pull request"
        
      - name: conditional step when event name is pull request
        if: ${{ github.event_name == 'push' }}
        run: echo "This event is a push"
        
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}   
      - name: Setup dotnet on runner
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.x'
      
      - name: Display dotnet version
        run: dotnet --version
      
      - run: echo "The preinstalled tools are located here on the runner ${{ runner.tool_cache }}."
      
      - name: List files in tool cache
        run: |
          ls ${{ runner.tool_cache }}
      
      - run: echo "This job's status is ${{ job.status }}."    
  
  Second-Job:
    name: The second job running on another runner
    runs-on: windows-latest
    needs: [Example-Actions-Job]
    steps:
      - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub."  
